@*Section NavBar*@
@await Html.PartialAsync("_NavBar", "Home")

@*Section Hero*@
@await Html.PartialAsync("_Hero")

<div class="container">
	<div class="tile-row">
		<div class="tile">
			<h4>Локальное хранение заявок</h4>
			<p>
				При локальном хранении заявка сохраняется в БД в отдельную таблицу заявок
				ассоциированную с пользователем, при этом сохраняется как тип так и значение заявки.
			</p>
			<p>
				Что бы увидеть сохраненные завки текущего пользователя необходимо аутентифицироваться
				(если ранее учетная запись не создавалась то необходимо ее создать).
				Если при создани нового пользователя будет отмечен checkbox достижения 18 летнего возраста,
				то для пользователя будет создана локальная заявка типа "AgeLimit" со значением "Аllowed".
				Увидеть перечень заявок текущего пользователя можно нажав на кнопку "Claims" 
				(появляеются для аутентифицированных пользователей).
			</p>
			@if (User?.Identity?.IsAuthenticated ?? false) {
				<a class="button" asp-controller="Claims" asp-action="Index" method="get">Claims</a>
			}
		</div>

		<div class="tile">
			<h4>Использование заявок при сторонней аутентификции</h4>
			<p>
				Заявки интересны тем, что приложение может получать их из разных источников,
				а не просто полагаться на локальную базу данных, хранящую информацию о пользователях.
			</p>
			<p>
				При выполнении задания для эмуляции получения сторонней заявки создан класс
				"LocationClaimsProvider" (исходник находятся в папке "Infrastructure")
				эмулирующий стороннее хранилище.
			</p>
			<p>
				Увидеть создаваемые заявки без их сохранения в локальной базе, вы можете создав
				пользователя с именем "ExtUser18". При этом, при аутентификации такого пользователя
				будет создаваться заявка типа "AgeLimit" со значением "18+" (значение было выбрано специально 
				другим - для примера). Увидеть перечень заявок текущего пользователя
				можно также нажав на кнопку "Claims".
			</p>
			<ul class="tag-list">
				<li>Microsoft</li>
				<li>Google</li>
				<li>SAP</li>
			</ul>
			@if (User?.Identity?.IsAuthenticated ?? false) {
				<a class="button" asp-controller="Claims" asp-action="Index" method="get">Claims</a>
			}
		</div>

		<div class="tile">
			<h4>Доступ к странице только для пользователей 18+</h4>
			<p>
				В приложении создана страница с доступом только для пользователей отметивших checkbox
				о достижении 18 летнего возраста при регистрации.
				Доступ к странице осуществляется с использованием политики (с именем "AUsers")
				проверяющей наличие у аутентифицированного пользователя заявки типа "AgeLimit"
				со значением "18+" или "Allowed".
			</p>
			<p>
				Политика применяется для действия "LimitedAccess" контроллера "Home".
				Проверить доступ можно перейдя на страницу с ограничением нажав на кнопку "LimitedAccess"
				в навигационном меню после аутентификации под логином пользователя отметившего достижение
				возраста 18+ при регистрации или на кнопку "18+" расположенную ниже.
			</p>
			@if (User?.Identity?.IsAuthenticated ?? false) {
				<a class="button" asp-controller="Home" asp-action="LimitedAccess" method="get">18+</a>
			}
		</div>
	</div>
</div>

@*Section Footer*@
@await Html.PartialAsync("_Footer")